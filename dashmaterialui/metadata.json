{
  "src/lib/components/Avatar.react.js": {
    "description": "ExampleComponent is an example component.\nIt takes a property, `label`, and\ndisplays it.\nIt renders an input with the property `value`\nwhich is editable by the user.",
    "displayName": "Avatar",
    "methods": [],
    "props": {
      "alt": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "Used in combination with src or srcSet to provide an alt attribute for the rendered img element."
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "Used to render icon or text elements inside the Avatar. src and alt props will not be used and no img will be rendered by default.\nThis can be an element, or just a string."
      },
      "classes": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override or extend the styles applied to the component. See CSS API below for more details."
      },
      "component": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.Component"
        },
        "required": false,
        "description": "The component used for the root node. Either a string to use a DOM element or a component.",
        "defaultValue": {
          "value": "'div'",
          "computed": false
        }
      },
      "imgProps": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Attributes applied to the img element if the component is used to display an image."
      },
      "sizes": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The sizes attribute for the img element."
      },
      "src": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The src attribute for the img element."
      },
      "srcSet": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The srcSet attribute for the img element."
      }
    }
  },
  "src/lib/components/Grid.react.js": {
    "description": "ExampleComponent is an example component.\nIt takes a property, `label`, and\ndisplays it.\nIt renders an input with the property `value`\nwhich is editable by the user.",
    "displayName": "Grid",
    "methods": [],
    "props": {
      "alignContent": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "'stretch'",
              "computed": false
            },
            {
              "value": "'center'",
              "computed": false
            },
            {
              "value": "'flex-start'",
              "computed": false
            },
            {
              "value": "'flex-end'",
              "computed": false
            },
            {
              "value": "'space-between'",
              "computed": false
            },
            {
              "value": "'space-around'",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "Defines the align-content style property. It's applied for all screen sizes.",
        "defaultValue": {
          "value": "'stretch'",
          "computed": false
        }
      },
      "alignItems": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "'flex-start'",
              "computed": false
            },
            {
              "value": "'center'",
              "computed": false
            },
            {
              "value": "'flex-end'",
              "computed": false
            },
            {
              "value": "'stretch'",
              "computed": false
            },
            {
              "value": "'baseline'",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "Defines the align-items style property. It's applied for all screen sizes.",
        "defaultValue": {
          "value": "'stretch'",
          "computed": false
        }
      },
      "children": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The content of the component."
      },
      "classes": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override or extend the styles applied to the component. See CSS API below for more details."
      },
      "component": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.Component"
        },
        "required": false,
        "description": "The component used for the root node. Either a string to use a DOM element or a component.",
        "defaultValue": {
          "value": "'div'",
          "computed": false
        }
      },
      "container": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "If true, the component will have the flex container behavior. You should be wrapping items with a container.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "direction": {
        "type": {
          "name": "enum",
          "computed": true,
          "value": "'row'"
        },
        "required": false,
        "description": "Defines the flex-direction style property. It is applied for all screen sizes.",
        "defaultValue": {
          "value": "'row'",
          "computed": false
        }
      },
      "item": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "If true, the component will have the flex item behavior. You should be wrapping items with a container.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "justify": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "'flex-start'",
              "computed": false
            },
            {
              "value": "'center'",
              "computed": false
            },
            {
              "value": "'flex-end'",
              "computed": false
            },
            {
              "value": "'space-between'",
              "computed": false
            },
            {
              "value": "'space-around'",
              "computed": false
            },
            {
              "value": "'space-evenly'",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "Defines the justify-content style property. It is applied for all screen sizes.",
        "defaultValue": {
          "value": "'flex-start'",
          "computed": false
        }
      },
      "lg": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "false",
              "computed": false
            },
            {
              "value": "'auto'",
              "computed": false
            },
            {
              "value": "true",
              "computed": false
            },
            {
              "value": "1",
              "computed": false
            },
            {
              "value": "2",
              "computed": false
            },
            {
              "value": "3",
              "computed": false
            },
            {
              "value": "4",
              "computed": false
            },
            {
              "value": "5",
              "computed": false
            },
            {
              "value": "6",
              "computed": false
            },
            {
              "value": "7",
              "computed": false
            },
            {
              "value": "8",
              "computed": false
            },
            {
              "value": "9",
              "computed": false
            },
            {
              "value": "10",
              "computed": false
            },
            {
              "value": "11",
              "computed": false
            },
            {
              "value": "12",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "Defines the number of grids the component is going to use. It's applied for the lg breakpoint and wider screens if not overridden.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "md": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "false",
              "computed": false
            },
            {
              "value": "'auto'",
              "computed": false
            },
            {
              "value": "true",
              "computed": false
            },
            {
              "value": "1",
              "computed": false
            },
            {
              "value": "2",
              "computed": false
            },
            {
              "value": "3",
              "computed": false
            },
            {
              "value": "4",
              "computed": false
            },
            {
              "value": "5",
              "computed": false
            },
            {
              "value": "6",
              "computed": false
            },
            {
              "value": "7",
              "computed": false
            },
            {
              "value": "8",
              "computed": false
            },
            {
              "value": "9",
              "computed": false
            },
            {
              "value": "10",
              "computed": false
            },
            {
              "value": "11",
              "computed": false
            },
            {
              "value": "12",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "Defines the number of grids the component is going to use. It's applied for the md breakpoint and wider screens if not overridden.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "sm": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "false",
              "computed": false
            },
            {
              "value": "'auto'",
              "computed": false
            },
            {
              "value": "true",
              "computed": false
            },
            {
              "value": "1",
              "computed": false
            },
            {
              "value": "2",
              "computed": false
            },
            {
              "value": "3",
              "computed": false
            },
            {
              "value": "4",
              "computed": false
            },
            {
              "value": "5",
              "computed": false
            },
            {
              "value": "6",
              "computed": false
            },
            {
              "value": "7",
              "computed": false
            },
            {
              "value": "8",
              "computed": false
            },
            {
              "value": "9",
              "computed": false
            },
            {
              "value": "10",
              "computed": false
            },
            {
              "value": "11",
              "computed": false
            },
            {
              "value": "12",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "Defines the number of grids the component is going to use. It's applied for the sm breakpoint and wider screens if not overridden.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "spacing": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "0",
              "computed": false
            },
            {
              "value": "8",
              "computed": false
            },
            {
              "value": "16",
              "computed": false
            },
            {
              "value": "24",
              "computed": false
            },
            {
              "value": "32",
              "computed": false
            },
            {
              "value": "40",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "Defines the space between the type item component. It can only be used on a type container component.",
        "defaultValue": {
          "value": "0",
          "computed": false
        }
      },
      "wrap": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "'nowrap'",
              "computed": false
            },
            {
              "value": "'wrap'",
              "computed": false
            },
            {
              "value": "'wrap-reverse'",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "Defines the flex-wrap style property. It's applied for all screen sizes.",
        "defaultValue": {
          "value": "'wrap'",
          "computed": false
        }
      },
      "xl": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "false",
              "computed": false
            },
            {
              "value": "'auto'",
              "computed": false
            },
            {
              "value": "true",
              "computed": false
            },
            {
              "value": "1",
              "computed": false
            },
            {
              "value": "2",
              "computed": false
            },
            {
              "value": "3",
              "computed": false
            },
            {
              "value": "4",
              "computed": false
            },
            {
              "value": "5",
              "computed": false
            },
            {
              "value": "6",
              "computed": false
            },
            {
              "value": "7",
              "computed": false
            },
            {
              "value": "8",
              "computed": false
            },
            {
              "value": "9",
              "computed": false
            },
            {
              "value": "10",
              "computed": false
            },
            {
              "value": "11",
              "computed": false
            },
            {
              "value": "12",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "Defines the number of grids the component is going to use. It's applied for the xl breakpoint and wider screens.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "xs": {
        "type": {
          "name": "enum",
          "value": [
            {
              "value": "false",
              "computed": false
            },
            {
              "value": "'auto'",
              "computed": false
            },
            {
              "value": "true",
              "computed": false
            },
            {
              "value": "1",
              "computed": false
            },
            {
              "value": "2",
              "computed": false
            },
            {
              "value": "3",
              "computed": false
            },
            {
              "value": "4",
              "computed": false
            },
            {
              "value": "5",
              "computed": false
            },
            {
              "value": "6",
              "computed": false
            },
            {
              "value": "7",
              "computed": false
            },
            {
              "value": "8",
              "computed": false
            },
            {
              "value": "9",
              "computed": false
            },
            {
              "value": "10",
              "computed": false
            },
            {
              "value": "11",
              "computed": false
            },
            {
              "value": "12",
              "computed": false
            }
          ]
        },
        "required": false,
        "description": "Defines the number of grids the component is going to use. It's applied for all the screen sizes with the lowest priority.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "zeroMinWidth": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "If true, it sets min-width: 0 on the item. Refer to the limitations section of the documentation to better understand the use case.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      }
    }
  },
  "src/lib/components/Paper.react.js": {
    "description": "ExampleComponent is an example component.\nIt takes a property, `label`, and\ndisplays it.\nIt renders an input with the property `value`\nwhich is editable by the user.",
    "displayName": "Paper",
    "methods": [],
    "props": {
      "children": {
        "type": {
          "name": "node"
        },
        "required": false,
        "description": "The content of the component."
      },
      "classes": {
        "type": {
          "name": "object"
        },
        "required": false,
        "description": "Override or extend the styles applied to the component. See CSS API below for more details."
      },
      "component": {
        "type": {
          "name": "custom",
          "raw": "PropTypes.Component"
        },
        "required": false,
        "description": "The component used for the root node. Either a string to use a DOM element or a component.",
        "defaultValue": {
          "value": "'div'",
          "computed": false
        }
      },
      "elevation": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Shadow depth, corresponds to dp in the spec. It's accepting values between 0 and 24 inclusive.",
        "defaultValue": {
          "value": "2",
          "computed": false
        }
      },
      "square": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "If true, rounded corners are disabled.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      }
    }
  }
}